//Copyright 2005 Harvard University / Howard Hughes Medical Institute (HHMI) All Rights Reserved
package org.nrg.plexiviewer.lite.viewer.Seg;
import java.awt.image.*;


public class SegColorModel {
    
    IndexColorModel cm;
    int alpha = 255;
    int region = -1;
    
    
    public SegColorModel(){
    }
    
    public void makeDefaultLUT(){
        
        int size = 256;
        byte [] reds = new byte[size];
        byte [] greens = new byte[size];
        byte [] blues = new byte[size];
        byte [] alphas = new byte[size];
        
        for (int i=0; i<256; i++){
            reds[i] =   (byte)(map[i*4 + 1] & 255);
            greens[i] = (byte)(map[i*4 + 2] & 255);
            blues[i] =  (byte)(map[i*4 + 3] & 255);
        }
        
        int a;
        if (region < 0){
            a = alpha;
        } else {
            a = 0;
        }

        for (int i=0;i<size;i++){
            alphas[i] = (byte)a;
        }
        
        if (region >=0){
            alphas[region] = (byte)alpha;
        } else { 
            alphas[0] = 0;
        }
        
        cm= new IndexColorModel(8,256,reds,greens,blues,alphas);
        
    }
    
    public void setRegion(int r){
        region = r; 
    }
    
    public void setAlpha(int a){
        alpha = a;
        makeDefaultLUT();
    }
    
    public int getAlpha(){
        return alpha;
    }
    
    public IndexColorModel getCm(){
        return cm;
    }
    
    public String toString(){
        String out = super.toString();
        out += "\ncm: " + cm;
        return out;
    }
    
    
    int [] map = {
        0,0,0,0,
        1,205,62,78,
        2,245,245,245,
        3,205,62,78,
        4,120,18,134,
        5,196,58,250,
        6,0,148,0,
        7,220,248,164,
        8,230,148,34,
        9,0,118,14,
        10,0,118,14,
        11,122,186,220,
        12,236,13,176,
        13,12,48,255,
        14,204,182,142,
        15,42,204,164,
        16,119,159,176,
        17,220,216,20,
        18,103,255,255,
        19,80,196,98,
        20,60,58,210,
        21,60,58,210,
        22,60,58,210,
        23,60,58,210,
        24,60,60,60,
        25,255,165,0,
        26,255,165,0,
        27,0,255,127,
        28,165,42,42,
        29,135,206,235,
        30,160,32,240,
        31,0,255,255,
        32,100,50,100,
        33,135,50,74,
        34,122,135,50,
        35,51,50,135,
        36,74,155,60,
        37,120,62,43,
        38,74,155,60,
        39,122,135,50,
        40,205,62,78,
        41,0,225,0,
        42,205,62,78,
        43,120,18,134,
        44,196,58,250,
        45,0,148,0,
        46,220,248,164,
        47,230,148,34,
        48,0,118,14,
        49,0,118,14,
        50,122,186,220,
        51,236,13,176,
        52,13,48,255,
        53,220,216,20,
        54,103,255,255,
        55,80,196,98,
        56,60,58,210,
        57,255,165,0,
        58,255,165,0,
        59,0,255,127,
        60,165,42,42,
        61,135,206,235,
        62,160,32,240,
        63,0,255,255,
        64,100,50,100,
        65,135,50,74,
        66,122,135,50,
        67,51,50,135,
        68,74,155,60,
        69,120,62,43,
        70,74,155,60,
        71,122,135,50,
        72,120,190,150,
        73,122,135,50,
        74,122,135,50,
        75,120,18,134,
        76,120,18,134,
        77,200,70,255,
        78,124,140,178,
        79,124,140,178,
        80,164,108,226,
        81,164,108,226,
        82,164,108,226,
        83,255,218,185,
        84,255,218,185,
        85,234,169,30,
        86,250,255,50,
        87,0,0,0,
        88,0,0,0,
        89,0,0,0,
        90,0,0,0,
        91,0,0,0,
        92,0,0,0,
        93,0,0,0,
        94,0,0,0,
        95,0,0,0,
        96,205,10,125,
        97,205,10,125,
        98,160,32,240,
        99,0,0,0,
        100,124,140,178,
        101,125,140,178,
        102,126,140,178,
        103,127,140,178,
        104,124,141,178,
        105,124,142,178,
        106,124,143,178,
        107,124,144,178,
        108,124,140,179,
        109,124,140,178,
        110,125,140,178,
        111,126,140,178,
        112,127,140,178,
        113,124,141,178,
        114,124,142,178,
        115,124,143,178,
        116,124,144,178,
        117,124,140,179,
        118,255,20,147,
        119,205,179,139,
        120,238,238,209,
        121,70,130,180,
        122,74,255,74,
        123,238,0,0,
        124,0,0,139,
        125,173,255,47,
        126,133,203,229,
        127,26,237,57,
        128,34,139,34,
        129,30,144,255,
        130,147,19,173,
        131,238,59,59,
        132,221,39,200,
        133,238,174,238,
        134,255,0,0,
        135,72,61,139,
        136,21,39,132,
        137,21,39,132,
        138,65,135,20,
        139,65,135,20,
        140,0,0,0,
        141,0,0,0,
        142,0,0,0,
        143,0,0,0,
        144,0,0,0,
        145,0,0,0,
        146,0,0,0,
        147,0,0,0,
        148,0,0,0,
        149,0,0,0,
        150,0,0,0,
        151,0,0,0,
        152,0,0,0,
        153,0,0,0,
        155,0,0,0,
        155,0,0,0,
        156,0,0,0,
        157,0,0,0,
        158,0,0,0,
        159,0,0,0,
        160,0,0,0,
        161,0,0,0,
        162,0,0,0,
        163,0,0,0,
        164,0,0,0,
        165,0,0,0,
        166,0,0,0,
        167,0,0,0,
        168,0,0,0,
        169,0,0,0,
        170,0,0,0,
        171,0,0,0,
        172,0,0,0,
        173,0,0,0,
        174,0,0,0,
        175,0,0,0,
        176,0,0,0,
        177,0,0,0,
        178,0,0,0,
        179,0,0,0,
        180,0,0,0,
        181,0,0,0,
        182,0,0,0,
        183,0,0,0,
        184,0,0,0,
        185,0,0,0,
        186,0,0,0,
        187,0,0,0,
        188,0,0,0,
        189,0,0,0,
        190,0,0,0,
        191,0,0,0,
        192,0,0,0,
        193,0,0,0,
        194,0,0,0,
        195,0,0,0,
        196,0,0,0,
        197,0,0,0,
        198,0,0,0,
        199,0,0,0,
        200,0,0,0,
        201,0,0,0,
        202,0,0,0,
        203,0,0,0,
        204,0,0,0,
        205,0,0,0,
        206,0,0,0,
        207,0,0,0,
        208,0,0,0,
        209,0,0,0,
        210,0,0,0,
        211,0,0,0,
        212,0,0,0,
        213,0,0,0,
        214,0,0,0,
        215,0,0,0,
        216,0,0,0,
        217,0,0,0,
        218,0,0,0,
        219,0,0,0,
        220,0,0,0,
        221,0,0,0,
        222,0,0,0,
        223,0,0,0,
        224,0,0,0,
        225,0,0,0,
        226,0,0,0,
        227,0,0,0,
        228,0,0,0,
        229,0,0,0,
        230,0,0,0,
        231,0,0,0,
        232,0,0,0,
        233,0,0,0,
        234,0,0,0,
        235,0,0,0,
        236,0,0,0,
        237,0,0,0,
        238,0,0,0,
        239,0,0,0,
        240,0,0,0,
        241,0,0,0,
        242,0,0,0,
        243,0,0,0,
        244,0,0,0,
        245,0,0,0,
        246,0,0,0,
        247,0,0,0,
        248,0,0,0,
        249,0,0,0,
        250,0,0,0,
        251,0,0,0,
        252,0,0,0,
        253,0,0,0,
        254,0,0,0,
        255,0,0,0,
        256,0,0,0
    };
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        SegColorModel segCM = new SegColorModel();
        //fcm.readLUT("C:\\fivInstall\\test.lut");
        segCM.makeDefaultLUT();
        System.out.println(segCM);
        
        IndexColorModel cm = segCM.getCm();
        int size = cm.getMapSize();
        byte []r = new byte[size];
        byte []g = new byte[size];
        byte []b = new byte[size];
        System.out.println("Index	Red	Green	Blue");
        int count = 0;
        cm.getReds(r);  cm.getGreens(g);  cm.getBlues(b);
        for (int i=0; i< cm.getMapSize(); i++){
            System.out.println(count + "\t" + (r[i]&255) + "\t" + (g[i]&255) + "\t" + (b[i]&255) );
            count++;
        }
        
    }
}